import{be as n,bf as t,aE as e,aw as r,bg as i}from"./index-26b86a81.js";var o=/\s/;var a=/^\s+/;function u(n){return n?n.slice(0,function(n){for(var t=n.length;t--&&o.test(n.charAt(t)););return t}(n)+1).replace(a,""):n}var s=/^[-+]0x[0-9a-f]+$/i,c=/^0b[01]+$/i,f=/^0o[0-7]+$/i,d=parseInt;function l(e){if("number"==typeof e)return e;if(n(e))return NaN;if(t(e)){var r="function"==typeof e.valueOf?e.valueOf():e;e=t(r)?r+"":r}if("string"!=typeof e)return 0===e?e:+e;e=u(e);var i=c.test(e);return i||f.test(e)?d(e.slice(2),i?2:8):s.test(e)?NaN:+e}var v=function(){return e.Date.now()},m=Math.max,p=Math.min;function g(n,e,r){var i,o,a,u,s,c,f=0,d=!1,g=!1,h=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function b(t){var e=i,r=o;return i=o=void 0,f=t,u=n.apply(r,e)}function x(n){return f=n,s=setTimeout(T,e),d?b(n):u}function y(n){var t=n-c;return void 0===c||t>=e||t<0||g&&n-f>=a}function T(){var n=v();if(y(n))return w(n);s=setTimeout(T,function(n){var t=e-(n-c);return g?p(t,a-(n-f)):t}(n))}function w(n){return s=void 0,h&&i?b(n):(i=o=void 0,u)}function E(){var n=v(),t=y(n);if(i=arguments,o=this,c=n,t){if(void 0===s)return x(c);if(g)return clearTimeout(s),s=setTimeout(T,e),b(c)}return void 0===s&&(s=setTimeout(T,e)),u}return e=l(e)||0,t(r)&&(d=!!r.leading,a=(g="maxWait"in r)?m(l(r.maxWait)||0,e):a,h="trailing"in r?!!r.trailing:h),E.cancel=function(){void 0!==s&&clearTimeout(s),f=0,i=c=o=s=void 0},E.flush=function(){return void 0===s?u:w(v())},E}const h=new Map;let b;function x(n,t){let e=[];return Array.isArray(t.arg)?e=t.arg:i(t.arg)&&e.push(t.arg),function(r,i){const o=t.instance.popperRef,a=r.target,u=null==i?void 0:i.target,s=!t||!t.instance,c=!a||!u,f=n.contains(a)||n.contains(u),d=n===a,l=e.length&&e.some((n=>null==n?void 0:n.contains(a)))||e.length&&e.includes(u),v=o&&(o.contains(a)||o.contains(u));s||c||f||d||l||v||t.value(r,i)}}r&&(document.addEventListener("mousedown",(n=>b=n)),document.addEventListener("mouseup",(n=>{for(const t of h.values())for(const{documentHandler:e}of t)e(n,b)})));const y={beforeMount(n,t){h.has(n)||h.set(n,[]),h.get(n).push({documentHandler:x(n,t),bindingFn:t.value})},updated(n,t){h.has(n)||h.set(n,[]);const e=h.get(n),r=e.findIndex((n=>n.bindingFn===t.oldValue)),i={documentHandler:x(n,t),bindingFn:t.value};r>=0?e.splice(r,1,i):e.push(i)},unmounted(n){h.delete(n)}};export{y as C,g as d};
